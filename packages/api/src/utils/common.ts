/**
 * Groups an array of objects based on a key generated by the keyFn.
 * The key is serialized using the serializerFn.
 *
 * @param arr The array of objects to group
 * @param keyFn A function that generates a key for each object
 * @param serializerFn A function that serializes the key (optional)
 * @returns An object with keys as the serialized group keys and values as arrays of objects
 */
export function groupBy<T, K>(
    arr: T[],
    keyFn: (item: T) => K,
    serializerFn: (key: K) => string = JSON.stringify,
): Record<string, T[]> {
    return arr.reduce(
        (acc, item) => {
            const key = serializerFn(keyFn(item));
            if (!acc[key]) {
                acc[key] = [];
            }
            acc[key].push(item);
            return acc;
        },
        {} as Record<string, T[]>,
    );
}

/**
 * Exists solely to enable mocking of functions that use current date.
 * @returns A date object representing now
 */
export function getDateNow(): Date {
    return new Date();
}
